{"ast":null,"code":"var _jsxFileName = \"G:\\\\ww\\\\crowdsourced-itinerary-planner\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register({\n  setUser,\n  setLoading\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const validateEmail = email => {\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Simple email pattern\n    return emailPattern.test(email);\n  };\n  const validatePassword = password => {\n    return password.length >= 6; // Minimum length for password\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    // Validate email and password\n    if (!validateEmail(email)) {\n      setError('Invalid email format.');\n      setSuccess('');\n      setLoading(false);\n      return;\n    }\n    if (!validatePassword(password)) {\n      setError('Password must be at least 6 characters long.');\n      setSuccess('');\n      setLoading(false);\n      return;\n    }\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      setUser(userCredential.user);\n      setSuccess('Registration successful!');\n      setError('');\n    } catch (error) {\n      if (error.code === 'auth/email-already-in-use') {\n        setError('This email is already registered. Please use a different email.');\n      } else {\n        setError('Error registering: ' + error.message);\n      }\n      setSuccess('');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleRegister,\n    className: \"bg-white p-6 rounded-lg shadow-md space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true,\n      className: \"border border-gray-300 p-3 rounded w-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true,\n      className: \"border border-gray-300 p-3 rounded w-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 w-full\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-500\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"dbdaq/Kg/qcvjBFq8Y0poN11kYI=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","auth","jsxDEV","_jsxDEV","Register","setUser","setLoading","_s","email","setEmail","password","setPassword","error","setError","success","setSuccess","validateEmail","emailPattern","test","validatePassword","length","handleRegister","e","preventDefault","userCredential","user","code","message","onSubmit","className","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/ww/crowdsourced-itinerary-planner/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\n\r\nfunction Register({ setUser, setLoading }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const validateEmail = (email) => {\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Simple email pattern\r\n    return emailPattern.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    return password.length >= 6; // Minimum length for password\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    // Validate email and password\r\n    if (!validateEmail(email)) {\r\n      setError('Invalid email format.');\r\n      setSuccess('');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (!validatePassword(password)) {\r\n      setError('Password must be at least 6 characters long.');\r\n      setSuccess('');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      setUser(userCredential.user);\r\n      setSuccess('Registration successful!');\r\n      setError('');\r\n    } catch (error) {\r\n      if (error.code === 'auth/email-already-in-use') {\r\n        setError('This email is already registered. Please use a different email.');\r\n      } else {\r\n        setError('Error registering: ' + error.message);\r\n      }\r\n      setSuccess('');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleRegister} className=\"bg-white p-6 rounded-lg shadow-md space-y-4\">\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n        className=\"border border-gray-300 p-3 rounded w-full\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n        className=\"border border-gray-300 p-3 rounded w-full\"\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 w-full\"\r\n      >\r\n        Register\r\n      </button>\r\n      {error && <p className=\"text-red-500\">{error}</p>}\r\n      {success && <p className=\"text-green-500\">{success}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}