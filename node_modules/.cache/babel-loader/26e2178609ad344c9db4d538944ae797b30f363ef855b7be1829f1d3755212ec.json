{"ast":null,"code":"import React,{useState}from'react';import{createUserWithEmailAndPassword}from'firebase/auth';import{auth}from'../firebase';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Register(_ref){let{setUser,setLoading}=_ref;const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const[success,setSuccess]=useState('');const validateEmail=email=>{const emailPattern=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;// Simple email pattern\nreturn emailPattern.test(email);};const validatePassword=password=>{return password.length>=6;// Minimum length for password\n};const handleRegister=async e=>{e.preventDefault();setLoading(true);// Validate email and password\nif(!validateEmail(email)){setError('Invalid email format.');setSuccess('');setLoading(false);return;}if(!validatePassword(password)){setError('Password must be at least 6 characters long.');setSuccess('');setLoading(false);return;}try{const userCredential=await createUserWithEmailAndPassword(auth,email,password);setUser(userCredential.user);setSuccess('Registration successful!');setError('');}catch(error){if(error.code==='auth/email-already-in-use'){setError('This email is already registered. Please use a different email.');}else{setError('Error registering: '+error.message);}setSuccess('');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRegister,className:\"bg-white p-6 rounded-lg shadow-md space-y-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),required:true,className:\"border border-gray-300 p-3 rounded w-full\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true,className:\"border border-gray-300 p-3 rounded w-full\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 w-full\",children:\"Register\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500\",children:error}),success&&/*#__PURE__*/_jsx(\"p\",{className:\"text-green-500\",children:success})]});}export default Register;","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","auth","jsx","_jsx","jsxs","_jsxs","Register","_ref","setUser","setLoading","email","setEmail","password","setPassword","error","setError","success","setSuccess","validateEmail","emailPattern","test","validatePassword","length","handleRegister","e","preventDefault","userCredential","user","code","message","onSubmit","className","children","type","placeholder","value","onChange","target","required"],"sources":["G:/ww/crowdsourced-itinerary-planner/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\n\r\nfunction Register({ setUser, setLoading }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const validateEmail = (email) => {\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Simple email pattern\r\n    return emailPattern.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    return password.length >= 6; // Minimum length for password\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    // Validate email and password\r\n    if (!validateEmail(email)) {\r\n      setError('Invalid email format.');\r\n      setSuccess('');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (!validatePassword(password)) {\r\n      setError('Password must be at least 6 characters long.');\r\n      setSuccess('');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      setUser(userCredential.user);\r\n      setSuccess('Registration successful!');\r\n      setError('');\r\n    } catch (error) {\r\n      if (error.code === 'auth/email-already-in-use') {\r\n        setError('This email is already registered. Please use a different email.');\r\n      } else {\r\n        setError('Error registering: ' + error.message);\r\n      }\r\n      setSuccess('');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleRegister} className=\"bg-white p-6 rounded-lg shadow-md space-y-4\">\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n        className=\"border border-gray-300 p-3 rounded w-full\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n        className=\"border border-gray-300 p-3 rounded w-full\"\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 w-full\"\r\n      >\r\n        Register\r\n      </button>\r\n      {error && <p className=\"text-red-500\">{error}</p>}\r\n      {success && <p className=\"text-green-500\">{success}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}