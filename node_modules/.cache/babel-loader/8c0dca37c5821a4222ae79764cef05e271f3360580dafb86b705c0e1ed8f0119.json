{"ast":null,"code":"var _jsxFileName = \"G:\\\\nikhil\\\\crowdsourced-itinerary-planner\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { auth, db } from './firebase'; // Import Firebase services\nimport Auth from './Auth'; // Import authentication component\nimport { collection, addDoc, getDocs, deleteDoc, doc, updateDoc } from 'firebase/firestore'; // Firestore methods\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [itinerary, setItinerary] = useState({\n    location: '',\n    date: '',\n    activities: ''\n  });\n  const [itineraries, setItineraries] = useState([]);\n  const [editIndex, setEditIndex] = useState(null);\n  const [user, setUser] = useState(null); // State to hold the current user\n\n  // Fetch itineraries from Firestore\n  const fetchItineraries = async () => {\n    try {\n      const itinerariesCollection = collection(db, 'itineraries');\n      const itinerariesSnapshot = await getDocs(itinerariesCollection);\n      const itinerariesList = itinerariesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setItineraries(itinerariesList);\n    } catch (error) {\n      console.error('Error fetching itineraries:', error);\n    }\n  };\n\n  // Set up authentication state observer\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(currentUser => {\n      setUser(currentUser);\n      if (currentUser) {\n        fetchItineraries(); // Fetch itineraries when user logs in\n        console.log('User is logged in:', currentUser);\n      } else {\n        console.log('No user is logged in.');\n        setItineraries([]); // Clear itineraries when user logs out\n      }\n    });\n    return () => unsubscribe(); // Cleanup subscription on unmount\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editIndex !== null) {\n        // Update itinerary\n        const itineraryDoc = doc(db, 'itineraries', itineraries[editIndex].id);\n        await updateDoc(itineraryDoc, itinerary);\n        const updatedItineraries = itineraries.map((item, index) => index === editIndex ? itinerary : item);\n        setItineraries(updatedItineraries);\n      } else {\n        // Save new itinerary\n        await addDoc(collection(db, 'itineraries'), itinerary);\n        setItineraries([...itineraries, {\n          ...itinerary,\n          id: Date.now()\n        }]); // Add a temporary id for local state\n      }\n      setItinerary({\n        location: '',\n        date: '',\n        activities: ''\n      }); // Reset form\n      setEditIndex(null); // Reset edit state\n    } catch (error) {\n      console.error('Error saving itinerary:', error);\n    }\n  };\n\n  // Handle edit action\n  const handleEdit = index => {\n    setItinerary(itineraries[index]);\n    setEditIndex(index);\n  };\n\n  // Handle delete action\n  const handleDelete = async index => {\n    try {\n      const itineraryDoc = doc(db, 'itineraries', itineraries[index].id);\n      await deleteDoc(itineraryDoc);\n      const updatedItineraries = itineraries.filter((_, i) => i !== index);\n      setItineraries(updatedItineraries);\n    } catch (error) {\n      console.error('Error deleting itinerary:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crowdsourced Itinerary Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Auth, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), \" \", user &&\n    /*#__PURE__*/\n    // Only show form if user is logged in\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Location\",\n        value: itinerary.location,\n        onChange: e => setItinerary({\n          ...itinerary,\n          location: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: itinerary.date,\n        onChange: e => setItinerary({\n          ...itinerary,\n          date: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Activities\",\n        value: itinerary.activities,\n        onChange: e => setItinerary({\n          ...itinerary,\n          activities: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [editIndex !== null ? 'Update' : 'Save', \" Itinerary\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Saved Itineraries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: itineraries.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: item.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), \" - \", item.date, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.activities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(index),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ExMTy9GS3of0PolmQNBjK68ck8g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","auth","db","Auth","collection","addDoc","getDocs","deleteDoc","doc","updateDoc","jsxDEV","_jsxDEV","App","_s","itinerary","setItinerary","location","date","activities","itineraries","setItineraries","editIndex","setEditIndex","user","setUser","fetchItineraries","itinerariesCollection","itinerariesSnapshot","itinerariesList","docs","map","id","data","error","console","unsubscribe","onAuthStateChanged","currentUser","log","handleSubmit","e","preventDefault","itineraryDoc","updatedItineraries","item","index","Date","now","handleEdit","handleDelete","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["G:/nikhil/crowdsourced-itinerary-planner/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { auth, db } from './firebase'; // Import Firebase services\r\nimport Auth from './Auth'; // Import authentication component\r\nimport { collection, addDoc, getDocs, deleteDoc, doc, updateDoc } from 'firebase/firestore'; // Firestore methods\r\n\r\nfunction App() {\r\n  const [itinerary, setItinerary] = useState({ location: '', date: '', activities: '' });\r\n  const [itineraries, setItineraries] = useState([]);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [user, setUser] = useState(null); // State to hold the current user\r\n\r\n  // Fetch itineraries from Firestore\r\n  const fetchItineraries = async () => {\r\n    try {\r\n      const itinerariesCollection = collection(db, 'itineraries');\r\n      const itinerariesSnapshot = await getDocs(itinerariesCollection);\r\n      const itinerariesList = itinerariesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setItineraries(itinerariesList);\r\n    } catch (error) {\r\n      console.error('Error fetching itineraries:', error);\r\n    }\r\n  };\r\n\r\n  // Set up authentication state observer\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(currentUser => {\r\n      setUser(currentUser);\r\n      if (currentUser) {\r\n        fetchItineraries(); // Fetch itineraries when user logs in\r\n        console.log('User is logged in:', currentUser);\r\n      } else {\r\n        console.log('No user is logged in.');\r\n        setItineraries([]); // Clear itineraries when user logs out\r\n      }\r\n    });\r\n    return () => unsubscribe(); // Cleanup subscription on unmount\r\n  }, []);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editIndex !== null) {\r\n        // Update itinerary\r\n        const itineraryDoc = doc(db, 'itineraries', itineraries[editIndex].id);\r\n        await updateDoc(itineraryDoc, itinerary);\r\n        const updatedItineraries = itineraries.map((item, index) => (index === editIndex ? itinerary : item));\r\n        setItineraries(updatedItineraries);\r\n      } else {\r\n        // Save new itinerary\r\n        await addDoc(collection(db, 'itineraries'), itinerary);\r\n        setItineraries([...itineraries, { ...itinerary, id: Date.now() }]); // Add a temporary id for local state\r\n      }\r\n\r\n      setItinerary({ location: '', date: '', activities: '' }); // Reset form\r\n      setEditIndex(null); // Reset edit state\r\n    } catch (error) {\r\n      console.error('Error saving itinerary:', error);\r\n    }\r\n  };\r\n\r\n  // Handle edit action\r\n  const handleEdit = (index) => {\r\n    setItinerary(itineraries[index]);\r\n    setEditIndex(index);\r\n  };\r\n\r\n  // Handle delete action\r\n  const handleDelete = async (index) => {\r\n    try {\r\n      const itineraryDoc = doc(db, 'itineraries', itineraries[index].id);\r\n      await deleteDoc(itineraryDoc);\r\n      const updatedItineraries = itineraries.filter((_, i) => i !== index);\r\n      setItineraries(updatedItineraries);\r\n    } catch (error) {\r\n      console.error('Error deleting itinerary:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Crowdsourced Itinerary Planner</h1>\r\n      <Auth user={user} /> {/* Render Auth component, passing the user state */}\r\n      {user && ( // Only show form if user is logged in\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            value={itinerary.location}\r\n            onChange={(e) => setItinerary({ ...itinerary, location: e.target.value })}\r\n            required\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            value={itinerary.date}\r\n            onChange={(e) => setItinerary({ ...itinerary, date: e.target.value })}\r\n            required\r\n          />\r\n          <textarea\r\n            placeholder=\"Activities\"\r\n            value={itinerary.activities}\r\n            onChange={(e) => setItinerary({ ...itinerary, activities: e.target.value })}\r\n            required\r\n          />\r\n          <button type=\"submit\">{editIndex !== null ? 'Update' : 'Save'} Itinerary</button>\r\n        </form>\r\n      )}\r\n\r\n      <h2>Saved Itineraries</h2>\r\n      <ul>\r\n        {itineraries.map((item, index) => (\r\n          <li key={item.id}>\r\n            <strong>{item.location}</strong> - {item.date}\r\n            <p>{item.activities}</p>\r\n            <button onClick={() => handleEdit(index)}>Edit</button>\r\n            <button onClick={() => handleDelete(index)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}